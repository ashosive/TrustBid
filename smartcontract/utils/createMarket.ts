import { ethers } from "hardhat";

async function main(factory: string, noOfOptions: number, hash: string, expireTime: number) {
    const [signer] = await ethers.getSigners();
    
    console.log("Signer ", signer.address);
  
    const tokenAddress = "0xab4f68A873eC164D9d52467D92469fC313Cf64F6";
    const oracleAddress = "0xeA65F246C606fc7C62f7B35724E85c788A04B13f";
  
    const PredictionMarketFactory = await ethers.getContractAt("PredictionMarketFactoryV3",factory);

    const createMarketTxn = await PredictionMarketFactory.createPredictionMarket(noOfOptions,hash,expireTime);

    console.log("txn ", createMarketTxn.hash);
}
const hashOf = "Will BTC/USD hit 85k ?";
const hashOfOptions = ["Yes", "No"];
const hash = "0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001a00000000000000000000000000000000000000000000000000000000000000021546f726f6e746f20426c7565204a617973207673204368696361676f2043756273000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003544f520000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000343484300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001e0000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000331343100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003544f5200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011546f726f6e746f20426c7565204a617973000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003e68747470733a2f2f7777772e6d6c627374617469632e636f6d2f7465616d2d6c6f676f732f7465616d2d6361702d6f6e2d6c696768742f3134312e7376670000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000003313132000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034348430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c4368696361676f20437562730000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003e68747470733a2f2f7777772e6d6c627374617469632e636f6d2f7465616d2d6c6f676f732f7465616d2d6361702d6f6e2d6c696768742f3131322e7376670000";
const noOfOptions = 2;
const TWO_DAYS = 60 * 60 * 24 * 2;
const expireTime = 1723832400;
const factory = "0xd228C766906074c0354459298CF52B092DEb751F";

// We recommend this pattern to be able to use async/await everywhere
// and properly handle errors.
main(factory,noOfOptions,hash,expireTime).catch((error) => {
    console.error(error);
    process.exitCode = 1;
});